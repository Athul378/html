private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {
File file = showFileDialog(true);
  if(file == null){
   }
   try {
       Image = ImageIO.read(file);
       jLabelImage.setIcon(new ImageIcon(Image));
       this.variable();
   } catch (IOException ex) {
      ex.printStackTrace();
   }
 }
private void jButtonDecodeActionPerformed(java.awt.event.ActionEvent evt) {
   if(Image == null){
       JOptionPane.showMessageDialog(this,"First Open a Image");
       return;
   }
   int len = extractInteger(Image,0,0);
   byte b[] = new byte[len];
   for(int  i = 0; i<len; i++)
       b[i] = extractByte(Image, i*8+32, 0);
   jTextMessage.setText(new String(b));
   
 }

private void jButtonResetActionPerformed(java.awt.event.ActionEvent evt) {
     Image = null;
     jTextMessage.setText("");
     jLabel1.setIcon(null);
}

private int extractInteger(BufferedImage img, int start, int storageBit){
   int maxX = img.getWidth(), maxY = img.getHeight()
         startX = start/maxY, startY = start - startX*maxY, count = 0;
   int length = 0;   
   for(int i = startYX; i<maxX && count<32; i++){
       for(int j= startY; j<maxY && count<32; j++){
           int rgb = img.getRGB(i, j), bit = getBitValue(rgb, storageBit);
           length = setBitValue(length, count, bit);
           count++;
       }
   }
     return length
 }
 
 private byte extractByte(BufferdImage img, int start, int storageBit){
     int maxX = img.getWidth(), maxY = img.getHeight()
          startX = start/maxY, startY = start - startX*maxY, count = 0;
     byte b = 0;
     for(int i = startYX; i<maxX && count<8; i++){
       for(int j= startY; j<maxY && count< 8; j++){
           int rgb = img.getRGB(i, j), bit = getBitValue(rgb, storageBit);
           b = (byte) setBitValue(b, count, bit);
           count++;
       }
   }
   return b;
 } 